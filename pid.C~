#include "Belle2Style.h"
#include "Belle2Utils.h"
#include "Belle2Labels.h"

void SetBelle2Style() {
  static TStyle* belle2Style = 0;
  cout << "\nApplying BELLE2 style settings...\n" << endl ;
  if (!belle2Style)
    belle2Style = Belle2Style();
  gROOT->SetStyle("BELLE2");
  gROOT->ForceStyle();
}

void pid()
{
  SetBelle2Style();
  TChain *t1 = new TChain();
  t1->Add("/home/souvik/leptoquark_analysis/elec_mode/elec_signalMC/evtgen_*.root/h1");
  Float_t mult_ds, dstrf, d0f,d0mass,mass,mom,deltam,elf,prf,elec_mom,pr_mom,elec_mas,pr_mass,mult_d0,prp1_l,prk1_l,e1_l,bc0,pis_k ;
  
  t1->SetBranchAddress("mult_ds",&mult_ds);                                                        
  t1->SetBranchAddress("e1_l",&e1_l);                                                                  
  t1->SetBranchAddress("prk1_l",&prk1_l);                                                                  
  t1->SetBranchAddress("prp1_l",&prp1_l);
  t1->SetBranchAddress("pis_k",&pis_k);
  t1->SetBranchAddress("deltam",&deltam);                                                          
  t1->SetBranchAddress("elec_mas",&elec_mas);                                                      
  t1->SetBranchAddress("pr_mass",&pr_mass);                                                      
  t1->SetBranchAddress("elec_mom",&elec_mom);                                                        
  t1->SetBranchAddress("pr_mom",&pr_mom);                                                        
  t1->SetBranchAddress("mom",&mom);                                                                
  t1->SetBranchAddress("dstrf",&dstrf);                                                              
  t1->SetBranchAddress("d0mass",&d0mass);                                                          
  t1->SetBranchAddress("mass",&mass);
  t1->SetBranchAddress("bc0",&bc0);
  /*  
  TH1F *hist3 = new TH1F("hist3","M_{D^{0}}",50, 0.1,1);
  for (Int_t i=0; i < t1->GetEntries(); ++i)
    {
      t1->GetEntry(i);
      {
	if(dstrf==1 && deltam>0.144 && deltam<0.147 && mom>2.5 && d0mass>1.85 && d0mass<1.875 && bc0==100)
	hist3->Fill(prp1_l);
      }
    }

  hist3->GetYaxis()->SetRangeUser(0,300000);
  hist3->GetXaxis()->SetTitle("PIDs");
  hist3->GetYaxis()->SetTitle("Events");
  hist3->SetLineColor(kBlue);
  hist3->SetLineWidth(2);
  //hist3->SetFillColor(kBlue);
  hist3->SetFillStyle(3040);
  hist3->GetXaxis()->CenterTitle();
  hist3->GetYaxis()->CenterTitle();
  //hist3->Scale(0.100);
  hist3->Draw();
    
  TH1F *hist4 = new TH1F("hist4","M_{D^{0}}",50, 0.1,1);
  for (Int_t i=0; i < t1->GetEntries(); ++i)
    {
      t1->GetEntry(i);
      {
	if(dstrf==1 && deltam>0.144 && deltam<0.147 && mom>2.5 && d0mass>1.85 && d0mass<1.875 && bc0==100)
        hist4->Fill(prk1_l);
      }
    }

  hist4->GetYaxis()->SetRangeUser(0,300000);
  hist4->GetXaxis()->SetTitle("PIDs");
  hist4->GetYaxis()->SetTitle("Events");
  hist4->SetLineColor(kGreen);
  hist4->SetLineWidth(2);
  hist4->SetFillColor(kGreen);
  hist4->SetFillStyle(3004);
  hist4->GetXaxis()->CenterTitle();
  hist4->GetYaxis()->CenterTitle();
  hist4->Draw("SAMES");
  */
  TH1F *hist5 = new TH1F("hist5","M_{D^{0}}",50, 0,1);
  for (Int_t i=0; i < t1->GetEntries(); ++i)
    {
      t1->GetEntry(i);
      {
        if(dstrf==1 && deltam>0.144 && deltam<0.147 && mom>2.5 && d0mass>1.85 && d0mass<1.875 && bc0==100)
        hist5->Fill(pis_k);
      }
    }

  hist5->GetYaxis()->SetRangeUser(0,300000);
  hist5->GetXaxis()->SetTitle("PIDs");
  hist5->GetYaxis()->SetTitle("Events");
  hist5->SetLineColor(kRed);
  hist5->SetLineWidth(2);
  hist5->SetFillColor(kRed);
  hist5->SetFillStyle(3001);
  hist5->GetXaxis()->CenterTitle();
  hist5->GetYaxis()->CenterTitle();
  hist5->Draw();
  /*
  TH1F *hist6 = new TH1F("hist6","M_{D^{0}}",50, 0.1,1);
  for (Int_t i=0; i < t1->GetEntries(); ++i)
    {
      t1->GetEntry(i);
      {
        if(dstrf==1 && deltam>0.144 && deltam<0.147 && mom>2.5 && d0mass>1.85 && d0mass<1.875 && bc0==100)
        hist6->Fill(e1_l);
      }
    }

  hist6->GetYaxis()->SetRangeUser(0,300000);
  hist6->GetXaxis()->SetTitle("PIDs");
  hist6->GetYaxis()->SetTitle("Events");
  hist6->SetLineColor(kCyan+2);
  hist6->SetLineWidth(2);
  hist6->SetFillColor(kCyan+2);
  hist6->SetFillStyle(3004);
  hist6->GetXaxis()->CenterTitle();
  hist6->GetYaxis()->CenterTitle();
  hist6->Draw("SAMES");
  */
  
  auto legend = new TLegend(0.1,0.7,0.48,0.9);
  legend->SetBorderSize(0);
  //legend->AddEntry(hist3,"prp_ID","l");
  //legend->AddEntry(hist4,"prK_ID","l");
  legend->AddEntry(hist5,"pis_ID","l");
  //legend->AddEntry(hist6,"el_ID","l");
  legend->Draw();
        
}

